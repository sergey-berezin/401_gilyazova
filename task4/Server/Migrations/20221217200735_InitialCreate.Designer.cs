// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server;

#nullable disable

namespace Server.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20221217200735_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("Server.Emotion_", b =>
                {
                    b.Property<int>("Emotion_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ImageInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("value")
                        .HasColumnType("REAL");

                    b.HasKey("Emotion_Id");

                    b.HasIndex("ImageInfoId");

                    b.ToTable("Emotions");
                });

            modelBuilder.Entity("Server.ImageInfo", b =>
                {
                    b.Property<int>("ImageInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("filename")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("hash")
                        .HasColumnType("INTEGER");

                    b.HasKey("ImageInfoId");

                    b.ToTable("images");
                });

            modelBuilder.Entity("Server.ImageValue", b =>
                {
                    b.Property<int>("ImageInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("data")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("ImageInfoId");

                    b.ToTable("values");
                });

            modelBuilder.Entity("Server.Emotion_", b =>
                {
                    b.HasOne("Server.ImageInfo", "image")
                        .WithMany("Emotions")
                        .HasForeignKey("ImageInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("image");
                });

            modelBuilder.Entity("Server.ImageValue", b =>
                {
                    b.HasOne("Server.ImageInfo", "image")
                        .WithOne("value")
                        .HasForeignKey("Server.ImageValue", "ImageInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("image");
                });

            modelBuilder.Entity("Server.ImageInfo", b =>
                {
                    b.Navigation("Emotions");

                    b.Navigation("value")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
